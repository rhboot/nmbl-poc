%global debug_package %{nil}
%global kver %{expand:%(rpm -q kernel-core --qf '%%{VERSION}\\n' | tail -n 1 )}
%global krel %{expand:%(rpm -q kernel-core --qf '%%{RELEASE}\\n' | tail -n 1 )}

Summary: nmbl proof of concept as a package
Name: nmbl-builder
Version: @@VERSION@@
Release: @@RELEASE@@%{?dist}
Group: System Environment/Base
License: GPLv3
URL: https://github.com/rhboot/nmbl-poc

BuildRequires: binutils
BuildRequires: btrfs-progs
BuildRequires: dhcp-client
BuildRequires: dracut
BuildRequires: dracut-nmbl
BuildRequires: dracut-network
BuildRequires: efi-srpm-macros
BuildRequires: findutils
BuildRequires: git
BuildRequires: grub2-emu
BuildRequires: grub2-tools
BuildRequires: grub2-tools-minimal
BuildRequires: kernel-core
BuildRequires: kernel-modules
BuildRequires: kernel-modules-core
BuildRequires: kexec-tools
BuildRequires: keyutils
BuildRequires: lvm2
BuildRequires: make
BuildRequires: openssh-clients
BuildRequires: pesign
BuildRequires: systemd-boot
BuildRequires: systemd-networkd
BuildRequires: systemd-ukify

Source0: nmbl-builder-%{VERSION}.tar.xz 

%description
nmbl-poc is a proof of concept for a bootloader for UEFI machines based on
the linux kernel and grub-emu, using either switchroot or kexec.

%package -n nmbl
Summary: nmbl proof of concept as a package
Version: %{kver}
Release: %{krel}

%description -n nmbl
nmbl-poc is a proof of concept for a bootloader for UEFI machines based on
the linux kernel and grub-emu, using either switchroot or kexec.

%prep
%autosetup -S git_am

%build
make nmbl-cloud.uki
%pesign -s -i nmbl-cloud.uki -o nmbl-cloud.signed.uki
mv nmbl-cloud.signed.uki nmbl-cloud.uki
make nmbl-megalith.uki
%pesign -s -i nmbl-megalith.uki -o nmbl-megalith.signed.uki
mv nmbl-megalith.signed.uki nmbl-megalith.uki
make nmbl-workstation.uki
%pesign -s -i nmbl-workstation.uki -o nmbl-workstation.signed.uki
mv nmbl-workstation.signed.uki nmbl-workstation.uki

%install
%make_install ESPDIR="%{efi_esp_dir}"

%posttrans -n nmbl
check_lvm () {
    lsblk -f | grep "LVM" > /dev/null 2>&1
}

set_lvm () {
    root=$(mount | grep " / " | awk '{print $1}')
    rd_lvm_lv=$(grep -oP '(?<=rd.lvm.lv=)[^ ]*' /proc/cmdline)
    root_args="root=$root ro rd.lvm.lv=$rd_lvm_lv"
}

check_btrfs () {
    fs=$(lsblk -f | grep "$(awk '/ \/ / {print $1}' /etc/fstab | grep -oP '(?<=UUID=)[^ ]*')" | awk '{print $2}')
    if [ "$fs" = "btrfs" ]
    then
            set_btrfs
    fi
}

set_btrfs () {
    root=$(grep -oP '(?<=root=)[^ ]*' /proc/cmdline)
    rootflags=$(grep -oP '(?<=rootflags=)[^ ]*' /proc/cmdline)
    root_args="root=$root ro rootflags=$rootflags"
}

set_standard () {
    root=$(grep -oP '(?<=root=)[^ ]*' /proc/cmdline)
    root_args="root=$root ro"
}

if check_lvm
then
    set_lvm
fi

check_btrfs
set_standard

echo -n "\nmbl-cloud.uki quiet console=ttyS0 $(echo $root_args) boot=$(awk '/ \/boot / {print $1}' /etc/fstab) root=$(awk '/ \/ / {print $1}' /etc/fstab) rd.system.gpt_auto=0" | iconv -f UTF8 -t UCS-2LE | efibootmgr -b 0010 -C -d /dev/vda -p 1 -L nmbl-switch-root -l /EFI/fedora/shimx64.efi -@ - -n 0010
echo -n "\nmbl-workstation.uki quiet console=ttyS0 $(echo $root_args) boot=$(awk '/ \/boot / {print $1}' /etc/fstab) rd.systemd.gpt_auto=0" | iconv -f UTF8 -t UCS-2LE | efibootmgr -b 0011 -C -d /dev/vda -p 1 -L nmbl-kexec -l /EFI/fedora/shimx64.efi -@ - -n 0011

%preun -n nmbl
efibootmgr -q -B -b 00010
efibootmgr -q -B -b 00011

%files -n nmbl
%defattr(-,root,root,-)
%{efi_esp_dir}/*.uki

%changelog
* Fri Mar 17 2023 Peter Jones <pjones@redhat.com> - 0-0
- Yeet a spec file into the world
